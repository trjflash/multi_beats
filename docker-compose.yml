version: '3.8'
services:
  filebeat01:
    image: docker.elastic.co/beats/filebeat:$ELASTIC_VERSION
    container_name: $FIRST_CONTAINER
    user: root
    environment:
      - ELASTICSEARCH_HOST=$ELASTICSEARCH_HOST
      - KIBANA_HOST=$KIBANA_HOST
      - ELASTICSEARCH_USERNAME=$ELASTIC_USER
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - CONTAINER_LOGS_DIR=$CONTAINER_LOGS_DIR/elk_logs/
      - SERVICE_NAME=$FIRST_CONTAINER_SERVICE_NAME
      - LOGS_TO_FILE=$LOGS_TO_FILE
      - ERROR_LEVEL=$ERROR_LEVEL
      - STAGE_NAME=$STAGE_NAME
    volumes:
          # - type: bind
          # source: $ROOT_PATH/filebeat1/logs
          # target: /usr/share/filebeat1/logs

        - type: bind
          source: $ROOT_PATH/$CONTAINER_POLICY_CREATES
          target: /usr/share/filebeat/policy-create.sh
          
        - type: bind
          source: $ROOT_PATH/$CONTAINER_PATTERN_CREATES
          target: /usr/share/filebeat/pattern-create.sh

        - type: bind
          source: $ROOT_PATH/$FIRST_CONTAINER_CONFIG
          target: /usr/share/filebeat/filebeat.yml
          
        - type: bind
          source: $ROOT_PATH/$FIRST_CONTAINER_LOGS
          target: $CONTAINER_LOGS_DIR
          read_only: true
    command: >
      sh -c "/usr/share/filebeat/policy-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${FIRST_CONTAINER_SERVICE_NAME} $FIRST_CONTAINER_POLICY_HOT_SIZE $FIRST_CONTAINER_POLICY_HOT_TIME $FIRST_CONTAINER_POLICY_DELETE_AGE
      && /usr/share/filebeat/pattern-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${FIRST_CONTAINER_SERVICE_NAME} $FIRST_CONTAINER_TIMESTAMP_FIELD
      && filebeat --strict.perms=false"          
    networks:
      - beats

  filebeat02:
    image: docker.elastic.co/beats/filebeat:$ELASTIC_VERSION
    container_name: $SECOND_CONTAINER
    user: root
    environment:
      - ELASTICSEARCH_HOST=$ELASTICSEARCH_HOST
      - KIBANA_HOST=$KIBANA_HOST
      - ELASTICSEARCH_USERNAME=$ELASTIC_USER
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - CONTAINER_LOGS_DIR=$CONTAINER_LOGS_DIR/elk_logs/
      - SERVICE_NAME=$SECOND_CONTAINER_SERVICE_NAME
      - LOGS_TO_FILE=$LOGS_TO_FILE
      - ERROR_LEVEL=$ERROR_LEVEL
      - STAGE_NAME=$STAGE_NAME
    volumes:
          # - type: bind
          # source: $ROOT_PATH/filebeat2/logs
          # target: /usr/share/filebeat2/logs

        - type: bind
          source: $ROOT_PATH/$CONTAINER_POLICY_CREATES
          target: /usr/share/filebeat/policy-create.sh      
          
        - type: bind
          source: $ROOT_PATH/$CONTAINER_PATTERN_CREATES
          target: /usr/share/filebeat/pattern-create.sh

        - type: bind
          source: $ROOT_PATH/$SECOND_CONTAINER_CONFIG
          target: /usr/share/filebeat/filebeat.yml
          
        - type: bind
          source: $ROOT_PATH/$SECOND_CONTAINER_LOGS
          target: $CONTAINER_LOGS_DIR
          read_only: true
    command: >
      sh -c "/usr/share/filebeat/policy-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${SECOND_CONTAINER_SERVICE_NAME} $SECOND_CONTAINER_POLICY_HOT_SIZE $SECOND_CONTAINER_POLICY_HOT_TIME $SECOND_CONTAINER_POLICY_DELETE_AGE
      && /usr/share/filebeat/pattern-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${SECOND_CONTAINER_SERVICE_NAME} $SECOND_CONTAINER_TIMESTAMP_FIELD
      && filebeat --strict.perms=false"          
    networks:
      - beats
      
  filebeat03:
    image: docker.elastic.co/beats/filebeat:$ELASTIC_VERSION
    container_name: $THIRD_CONTAINER
    user: root
    environment:
      - ELASTICSEARCH_HOST=$ELASTICSEARCH_HOST
      - KIBANA_HOST=$KIBANA_HOST
      - ELASTICSEARCH_USERNAME=$ELASTIC_USER
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - CONTAINER_LOGS_DIR=$CONTAINER_LOGS_DIR/elk_logs/
      - SERVICE_NAME=$THIRD_CONTAINER_SERVICE_NAME
      - LOGS_TO_FILE=$LOGS_TO_FILE
      - ERROR_LEVEL=$ERROR_LEVEL
      - STAGE_NAME=$STAGE_NAME
    volumes:
          # - type: bind
          # source: $ROOT_PATH/filebeat3/logs
          # target: /usr/share/filebeat3/logs

        - type: bind
          source: $ROOT_PATH/$CONTAINER_POLICY_CREATES
          target: /usr/share/filebeat/policy-create.sh

        - type: bind
          source: $ROOT_PATH/$CONTAINER_PATTERN_CREATES
          target: /usr/share/filebeat/pattern-create.sh

        - type: bind
          source: $ROOT_PATH/$THIRD_CONTAINER_CONFIG
          target: /usr/share/filebeat/filebeat.yml
          
        - type: bind
          source: $ROOT_PATH/$THIRD_CONTAINER_LOGS
          target: $CONTAINER_LOGS_DIR
          read_only: true
    command: >
      sh -c "/usr/share/filebeat/policy-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${THIRD_CONTAINER_SERVICE_NAME} $THIRD_CONTAINER_POLICY_HOT_SIZE $THIRD_CONTAINER_POLICY_HOT_TIME $THIRD_CONTAINER_POLICY_DELETE_AGE
      && /usr/share/filebeat/pattern-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${THIRD_CONTAINER_SERVICE_NAME} $THIRD_CONTAINER_TIMESTAMP_FIELD
      && filebeat --strict.perms=false"          
    networks:
      - beats
      
  filebeat04:
    image: docker.elastic.co/beats/filebeat:$ELASTIC_VERSION
    container_name: $FOURTH_CONTAINER
    user: root
    environment:
      - ELASTICSEARCH_HOST=$ELASTICSEARCH_HOST
      - KIBANA_HOST=$KIBANA_HOST
      - ELASTICSEARCH_USERNAME=$ELASTIC_USER
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - CONTAINER_LOGS_DIR=$CONTAINER_LOGS_DIR/elk_logs/
      - SERVICE_NAME=$FOURTH_CONTAINER_SERVICE_NAME
      - LOGS_TO_FILE=$LOGS_TO_FILE
      - ERROR_LEVEL=$ERROR_LEVEL
      - STAGE_NAME=$STAGE_NAME
    volumes:
          # - type: bind
          # source: $ROOT_PATH/filebeat4/logs
          # target: /usr/share/filebeat4/logs

        - type: bind
          source: $ROOT_PATH/$CONTAINER_POLICY_CREATES
          target: /usr/share/filebeat/policy-create.sh

        - type: bind
          source: $ROOT_PATH/$CONTAINER_PATTERN_CREATES
          target: /usr/share/filebeat/pattern-create.sh

        - type: bind
          source: $ROOT_PATH/$FOURTH_CONTAINER_CONFIG
          target: /usr/share/filebeat/filebeat.yml
          
        - type: bind
          source: $ROOT_PATH/$FOURTH_CONTAINER_LOGS
          target: $CONTAINER_LOGS_DIR
          read_only: true
    command: >
      sh -c "/usr/share/filebeat/policy-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${FOURTH_CONTAINER_SERVICE_NAME} $FOURTH_CONTAINER_POLICY_HOT_SIZE $FOURTH_CONTAINER_POLICY_HOT_TIME $FOURTH_CONTAINER_POLICY_DELETE_AGE
      && /usr/share/filebeat/pattern-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${FOURTH_CONTAINER_SERVICE_NAME} $FOURTH_CONTAINER_TIMESTAMP_FIELD
      && filebeat --strict.perms=false"          
    networks:
      - beats
      
  filebeat05:
    image: docker.elastic.co/beats/filebeat:$ELASTIC_VERSION
    container_name: $FIFTH_CONTAINER
    user: root
    environment:
      - ELASTICSEARCH_HOST=$ELASTICSEARCH_HOST
      - KIBANA_HOST=$KIBANA_HOST
      - ELASTICSEARCH_USERNAME=$ELASTIC_USER
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - CONTAINER_LOGS_DIR=$CONTAINER_LOGS_DIR/elk_logs/
      - SERVICE_NAME=$FIFTH_CONTAINER_SERVICE_NAME
      - LOGS_TO_FILE=$LOGS_TO_FILE
      - ERROR_LEVEL=$ERROR_LEVEL
      - STAGE_NAME=$STAGE_NAME
    volumes:
          # - type: bind
          # source: $ROOT_PATH/filebeat5/logs
          # target: /usr/share/filebeat5/logs

        - type: bind
          source: $ROOT_PATH/$CONTAINER_POLICY_CREATES
          target: /usr/share/filebeat/policy-create.sh

        - type: bind
          source: $ROOT_PATH/$CONTAINER_PATTERN_CREATES
          target: /usr/share/filebeat/pattern-create.sh

        - type: bind
          source: $ROOT_PATH/$FIFTH_CONTAINER_CONFIG
          target: /usr/share/filebeat/filebeat.yml
          
        - type: bind
          source: $ROOT_PATH/$FIFTH_CONTAINER_LOGS
          target: $CONTAINER_LOGS_DIR
          read_only: true
    command: >
      sh -c "/usr/share/filebeat/policy-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${FIFTH_CONTAINER_SERVICE_NAME} $FIFTH_CONTAINER_POLICY_HOT_SIZE $FIFTH_CONTAINER_POLICY_HOT_TIME $FIFTH_CONTAINER_POLICY_DELETE_AGE
      && /usr/share/filebeat/pattern-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${FIFTH_CONTAINER_SERVICE_NAME} $FIFTH_CONTAINER_TIMESTAMP_FIELD
      && filebeat --strict.perms=false"          
    networks:
      - beats
 
  filebeat06:
    image: docker.elastic.co/beats/filebeat:$ELASTIC_VERSION
    container_name: $SIXTH_CONTAINER
    user: root
    environment:
      - ELASTICSEARCH_HOST=$ELASTICSEARCH_HOST
      - KIBANA_HOST=$KIBANA_HOST
      - ELASTICSEARCH_USERNAME=$ELASTIC_USER
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - CONTAINER_LOGS_DIR=$CONTAINER_LOGS_DIR/elk_logs/
      - SERVICE_NAME=$SIXTH_CONTAINER_SERVICE_NAME
      - LOGS_TO_FILE=$LOGS_TO_FILE
      - ERROR_LEVEL=$ERROR_LEVEL
      - STAGE_NAME=$STAGE_NAME
    volumes:
          # - type: bind
          # source: $ROOT_PATH/filebeat6/logs
          # target: /usr/share/filebeat6/logs

        - type: bind
          source: $ROOT_PATH/$CONTAINER_POLICY_CREATES
          target: /usr/share/filebeat/policy-create.sh

        - type: bind
          source: $ROOT_PATH/$CONTAINER_PATTERN_CREATES
          target: /usr/share/filebeat/pattern-create.sh

        - type: bind
          source: $ROOT_PATH/$SIXTH_CONTAINER_CONFIG
          target: /usr/share/filebeat/filebeat.yml
          
        - type: bind
          source: $ROOT_PATH/$SIXTH_CONTAINER_LOGS
          target: $CONTAINER_LOGS_DIR
          read_only: true
    command: >
      sh -c "/usr/share/filebeat/policy-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${SIXTH_CONTAINER_SERVICE_NAME} $SIXTH_CONTAINER_POLICY_HOT_SIZE $SIXTH_CONTAINER_POLICY_HOT_TIME $SIXTH_CONTAINER_POLICY_DELETE_AGE
      && /usr/share/filebeat/pattern-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${SIXTH_CONTAINER_SERVICE_NAME} $SIXTH_CONTAINER_TIMESTAMP_FIELD
      && filebeat --strict.perms=false"          
    networks:
      - beats

  filebeat07:
    image: docker.elastic.co/beats/filebeat:$ELASTIC_VERSION
    container_name: $SEVENTH_CONTAINER
    user: root
    environment:
      - ELASTICSEARCH_HOST=$ELASTICSEARCH_HOST
      - KIBANA_HOST=$KIBANA_HOST
      - ELASTICSEARCH_USERNAME=$ELASTIC_USER
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - CONTAINER_LOGS_DIR=$CONTAINER_LOGS_DIR/elk_logs/
      - SERVICE_NAME=$SEVENTH_CONTAINER_SERVICE_NAME
      - LOGS_TO_FILE=$LOGS_TO_FILE
      - ERROR_LEVEL=$ERROR_LEVEL
      - STAGE_NAME=$STAGE_NAME
    volumes:
          # - type: bind
          # source: $ROOT_PATH/filebeat7/logs
          # target: /usr/share/filebeat7/logs

        - type: bind
          source: $ROOT_PATH/$CONTAINER_POLICY_CREATES
          target: /usr/share/filebeat/policy-create.sh

        - type: bind
          source: $ROOT_PATH/$CONTAINER_PATTERN_CREATES
          target: /usr/share/filebeat/pattern-create.sh

        - type: bind
          source: $ROOT_PATH/$SEVENTH_CONTAINER_CONFIG
          target: /usr/share/filebeat/filebeat.yml
          
        - type: bind
          source: $ROOT_PATH/$SEVENTH_CONTAINER_LOGS
          target: $CONTAINER_LOGS_DIR
          read_only: true
    command: >
      sh -c "/usr/share/filebeat/policy-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${SEVENTH_CONTAINER_SERVICE_NAME} $SEVENTH_CONTAINER_POLICY_HOT_SIZE $SEVENTH_CONTAINER_POLICY_HOT_TIME $SEVENTH_CONTAINER_POLICY_DELETE_AGE
      && /usr/share/filebeat/pattern-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${SEVENTH_CONTAINER_SERVICE_NAME} $SEVENTH_CONTAINER_TIMESTAMP_FIELD
      && filebeat --strict.perms=false"          
    networks:
      - beats

  filebeat08:
    image: docker.elastic.co/beats/filebeat:$ELASTIC_VERSION
    container_name: $EIGHTH_CONTAINER
    user: root
    environment:
      - ELASTICSEARCH_HOST=$ELASTICSEARCH_HOST
      - KIBANA_HOST=$KIBANA_HOST
      - ELASTICSEARCH_USERNAME=$ELASTIC_USER
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - CONTAINER_LOGS_DIR=$CONTAINER_LOGS_DIR/elk_logs/
      - SERVICE_NAME=$EIGHTH_CONTAINER_SERVICE_NAME
      - LOGS_TO_FILE=$LOGS_TO_FILE
      - ERROR_LEVEL=$ERROR_LEVEL
      - STAGE_NAME=$STAGE_NAME
    volumes:
          # - type: bind
          # source: $ROOT_PATH/filebeat8/logs
          # target: /usr/share/filebeat8/logs

        - type: bind
          source: $ROOT_PATH/$CONTAINER_POLICY_CREATES
          target: /usr/share/filebeat/policy-create.sh

        - type: bind
          source: $ROOT_PATH/$CONTAINER_PATTERN_CREATES
          target: /usr/share/filebeat/pattern-create.sh

        - type: bind
          source: $ROOT_PATH/$EIGHTH_CONTAINER_CONFIG
          target: /usr/share/filebeat/filebeat.yml
          
        - type: bind
          source: $ROOT_PATH/$EIGHTH_CONTAINER_LOGS
          target: $CONTAINER_LOGS_DIR
          read_only: true
    command: >
      sh -c "/usr/share/filebeat/policy-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${EIGHTH_CONTAINER_SERVICE_NAME} $EIGHTH_CONTAINER_POLICY_HOT_SIZE $EIGHTH_CONTAINER_POLICY_HOT_TIME $EIGHTH_CONTAINER_POLICY_DELETE_AGE
      && /usr/share/filebeat/pattern-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${EIGHTH_CONTAINER_SERVICE_NAME} $EIGHTH_CONTAINER_TIMESTAMP_FIELD
      && filebeat --strict.perms=false"          
    networks:
      - beats

  filebeat09:
    image: docker.elastic.co/beats/filebeat:$ELASTIC_VERSION
    container_name: $NINTH_CONTAINER
    user: root
    environment:
      - ELASTICSEARCH_HOST=$ELASTICSEARCH_HOST
      - KIBANA_HOST=$KIBANA_HOST
      - ELASTICSEARCH_USERNAME=$ELASTIC_USER
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - CONTAINER_LOGS_DIR=$CONTAINER_LOGS_DIR/elk_logs/
      - SERVICE_NAME=$NINTH_CONTAINER_SERVICE_NAME
      - LOGS_TO_FILE=$LOGS_TO_FILE
      - ERROR_LEVEL=$ERROR_LEVEL
      - STAGE_NAME=$STAGE_NAME
    volumes:
          # - type: bind
          # source: $ROOT_PATH/filebeat9/logs
          # target: /usr/share/filebeat9/logs

        - type: bind
          source: $ROOT_PATH/$CONTAINER_POLICY_CREATES
          target: /usr/share/filebeat/policy-create.sh

        - type: bind
          source: $ROOT_PATH/$CONTAINER_PATTERN_CREATES
          target: /usr/share/filebeat/pattern-create.sh

        - type: bind
          source: $ROOT_PATH/$NINTH_CONTAINER_CONFIG
          target: /usr/share/filebeat/filebeat.yml
          
        - type: bind
          source: $ROOT_PATH/$NINTH_CONTAINER_LOGS
          target: $CONTAINER_LOGS_DIR
          read_only: true
    command: >
      sh -c "/usr/share/filebeat/policy-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${NINTH_CONTAINER_SERVICE_NAME} $NINTH_CONTAINER_POLICY_HOT_SIZE $NINTH_CONTAINER_POLICY_HOT_TIME $NINTH_CONTAINER_POLICY_DELETE_AGE
      && /usr/share/filebeat/pattern-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${NINTH_CONTAINER_SERVICE_NAME} $NINTH_CONTAINER_TIMESTAMP_FIELD
      && filebeat --strict.perms=false"          
    networks:
      - beats
 
  filebeat10:
    image: docker.elastic.co/beats/filebeat:$ELASTIC_VERSION
    container_name: $TENTH_CONTAINER
    user: root
    environment:
      - ELASTICSEARCH_HOST=$ELASTICSEARCH_HOST
      - KIBANA_HOST=$KIBANA_HOST
      - ELASTICSEARCH_USERNAME=$ELASTIC_USER
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - CONTAINER_LOGS_DIR=$CONTAINER_LOGS_DIR/elk_logs/
      - SERVICE_NAME=$TENTH_CONTAINER_SERVICE_NAME
      - LOGS_TO_FILE=$LOGS_TO_FILE
      - ERROR_LEVEL=$ERROR_LEVEL
      - STAGE_NAME=$STAGE_NAME
    volumes:
          # - type: bind
          # source: $ROOT_PATH/filebeat10/logs
          # target: /usr/share/filebeat10/logs

        - type: bind
          source: $ROOT_PATH/$CONTAINER_POLICY_CREATES
          target: /usr/share/filebeat/policy-create.sh

        - type: bind
          source: $ROOT_PATH/$CONTAINER_PATTERN_CREATES
          target: /usr/share/filebeat/pattern-create.sh

        - type: bind
          source: $ROOT_PATH/$TENTH_CONTAINER_CONFIG
          target: /usr/share/filebeat/filebeat.yml
          
        - type: bind
          source: $ROOT_PATH/$TENTH_CONTAINER_LOGS
          target: $CONTAINER_LOGS_DIR
          read_only: true
    command: >
      sh -c "/usr/share/filebeat/policy-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${TENTH_CONTAINER_SERVICE_NAME} $TENTH_CONTAINER_POLICY_HOT_SIZE $TENTH_CONTAINER_POLICY_HOT_TIME $TENTH_CONTAINER_POLICY_DELETE_AGE
      && /usr/share/filebeat/pattern-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${TENTH_CONTAINER_SERVICE_NAME} $TENTH_CONTAINER_TIMESTAMP_FIELD
      && filebeat --strict.perms=false"          
    networks:
      - beats
      
  filebeat11:
    image: docker.elastic.co/beats/filebeat:$ELASTIC_VERSION
    container_name: $ELEVENTH_CONTAINER
    user: root
    environment:
      - ELASTICSEARCH_HOST=$ELASTICSEARCH_HOST
      - KIBANA_HOST=$KIBANA_HOST
      - ELASTICSEARCH_USERNAME=$ELASTIC_USER
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - CONTAINER_LOGS_DIR=$CONTAINER_LOGS_DIR/elk_logs/
      - SERVICE_NAME=$ELEVENTH_CONTAINER_SERVICE_NAME
      - LOGS_TO_FILE=$LOGS_TO_FILE
      - ERROR_LEVEL=$ERROR_LEVEL
      - STAGE_NAME=$STAGE_NAME
    volumes:
          # - type: bind
          # source: $ROOT_PATH/filebeat11/logs
          # target: /usr/share/filebeat11/logs

        - type: bind
          source: $ROOT_PATH/$CONTAINER_POLICY_CREATES
          target: /usr/share/filebeat/policy-create.sh

        - type: bind
          source: $ROOT_PATH/$CONTAINER_PATTERN_CREATES
          target: /usr/share/filebeat/pattern-create.sh

        - type: bind
          source: $ROOT_PATH/$ELEVENTH_CONTAINER_CONFIG
          target: /usr/share/filebeat/filebeat.yml
          
        - type: bind
          source: $ROOT_PATH/$ELEVENTH_CONTAINER_LOGS
          target: $CONTAINER_LOGS_DIR
          read_only: true
    command: >
      sh -c "/usr/share/filebeat/policy-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${ELEVENTH_CONTAINER_SERVICE_NAME} $ELEVENTH_CONTAINER_POLICY_HOT_SIZE $ELEVENTH_CONTAINER_POLICY_HOT_TIME $ELEVENTH_CONTAINER_POLICY_DELETE_AGE
      && /usr/share/filebeat/pattern-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-logs-${ELEVENTH_CONTAINER_SERVICE_NAME} $ELEVENTH_CONTAINER_TIMESTAMP_FIELD
      && filebeat --strict.perms=false"          
    networks:
      - beats

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:$ELASTIC_VERSION
    container_name: $METRICS_CONTAINER
    user: root
    environment:
      - ELASTICSEARCH_HOST=$ELASTICSEARCH_HOST
      - KIBANA_HOST=$KIBANA_HOST
      - ELASTICSEARCH_USERNAME=$ELASTIC_USER
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - LOGS_TO_FILE=$LOGS_TO_FILE
      - ERROR_LEVEL=$ERROR_LEVEL
      - STAGE_NAME=$STAGE_NAME
    volumes:
        # - type: bind
          # source: $ROOT_PATH/metricbeat/logs
          # target: /usr/share/metricbeat/logs
 
        - type: bind
          source: $ROOT_PATH/$METRICBEAT_CONTAINER_CONFIG
          target: /usr/share/metricbeat/metricbeat.yml
 
        - type: bind
          source: $ROOT_PATH/$CONTAINER_POLICY_CREATES
          target: /usr/share/metricbeat/policy-create.sh
          
        - type: bind
          source: $ROOT_PATH/$CONTAINER_PATTERN_CREATES
          target: /usr/share/metricbeat/pattern-create.sh

        - type: bind
          source: /var/run/docker.sock
          target: /var/run/docker.sock
          read_only: true

        - type: bind
          source: /sys/fs/cgroup
          target: /hostfs/sys/fs/cgroup
          read_only: true
          
        - type: bind
          source: /proc
          target: /hostfs/proc/self
          read_only: true   
          
        - type: bind
          source: /
          target: /hostfs
          read_only: true
    command: > 
      sh -c "/usr/share/metricbeat/policy-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-metrics $METRICBEAT_CONTAINER_POLICY_HOT_SIZE $METRICBEAT_CONTAINER_POLICY_HOT_TIME $METRICBEAT_CONTAINER_POLICY_DELETE_AGE
      && /usr/share/metricbeat/pattern-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-metrics $METRICBEAT_CONTAINER_TIMESTAMP_FIELD
      && metricbeat --strict.perms=false
      && metricbeat -system.hostfs=/hostfs"
    networks:
      - beats
      
  heartbeat:
    image: docker.elastic.co/beats/heartbeat:$ELASTIC_VERSION
    container_name: $HEARTBEAT_CONTAINER
    user: root
    environment:
      - ELASTICSEARCH_HOST=$ELASTICSEARCH_HOST
      - KIBANA_HOST=$KIBANA_HOST
      - ELASTICSEARCH_USERNAME=$ELASTIC_USER
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - LOGS_TO_FILE=$LOGS_TO_FILE
      - ERROR_LEVEL=$ERROR_LEVEL
      - STAGE_NAME=$STAGE_NAME
    volumes:
          # - type: bind
          # source: $ROOT_PATH/heartbeat/logs
          # target: /usr/share/heartbeat/logs

        - type: bind
          source: $ROOT_PATH/$CONTAINER_POLICY_CREATES
          target: /usr/share/heartbeat/policy-create.sh

        - type: bind
          source: $ROOT_PATH/$CONTAINER_PATTERN_CREATES
          target: /usr/share/heartbeat/pattern-create.sh

        - type: bind
          source: $ROOT_PATH/$HEARTBEAT_CONTAINER_CONFIG
          target: /usr/share/heartbeat/heartbeat.yml
    command: >
      sh -c "/usr/share/heartbeat/policy-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-heartbeat $HEARTBEAT_CONTAINER_POLICY_HOT_SIZE $HEARTBEAT_CONTAINER_POLICY_HOT_TIME $HEARTBEAT_CONTAINER_POLICY_DELETE_AGE
      && /usr/share/heartbeat/pattern-create.sh $ELASTICSEARCH_HOST magnum-${STAGE_NAME}-heartbeat $HEARTBEAT_CONTAINER_TIMESTAMP_FIELD
      && heartbeat --strict.perms=false"
    networks:
      - beats
          
  elastalert:
    image: ivankrizsan/elastalert:latest
    container_name: $ELASTALERT_CONTAINER
    user: root
    environment:
      - SET_CONTAINER_TIMEZONE=true
      - CONTAINER_TIMEZONE=Asia/Almaty
      - ELASTICSEARCH_HOST=$ELASTICSEARCH_HOST_ONLY
      - ELASTICSEARCH_USER=$ELASTIC_USER
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD

    volumes:
          # - type: bind
          # source: $ROOT_PATH/$ELASTALERT_LOGS_DIR
          # target: /opt/logs

        - type: bind
          source: $ROOT_PATH/$ELASTALERT_CONFIGS_DIR
          target: /opt/config

        - type: bind
          source: $ROOT_PATH/$ELASTALERT_RULES_DIR
          target: /opt/rules
    networks:
      - beats
          
networks:
  beats:
    name: beats
    driver: bridge